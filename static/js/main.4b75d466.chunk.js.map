{"version":3,"sources":["components/Month.jsx","components/Week.jsx","App.js","reportWebVitals.js","index.js"],"names":["MonthCal","props","state","selectedMonth","moment","selectedDay","startOf","selectedMonthEvents","showEvents","previous","bind","next","showCalendar","goToCurrentMonthView","initialiseEvents","currentMonthView","this","setState","subtract","add","day","date","clone","className","format","currentSelectedDay","onClick","monthEvents","weeks","done","previousCurrentNextView","count","monthIndex","month","push","selected","select","allEvents","event","name","title","position","imageUrl","i","length","renderDayLabel","renderTodayLabel","renderMonthLabel","renderWeeks","React","Component","Events","monthEventsRendered","map","src","alt","dayEventsRendered","isSame","DayNames","Week","days","dayHasEvents","j","substring","number","isCurrentMonth","isToday","Date","hasEvents","Day","WeekCal","selectedWeek","selectedWeekEvents","goToCurrentWeekView","currentWeekView","console","log","weekEvents","renderWeekLabel","weekEventsRendered","isCurrentWeek","App","currentView","nextView","viewNumber","setCurrentView","Month","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b75d466.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nclass MonthCal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: moment(),\r\n            selectedDay: moment().startOf('day'),\r\n            selectedMonthEvents: [],\r\n            showEvents: false\r\n        };\r\n\r\n        this.previous = this.previous.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.showCalendar = this.showCalendar.bind(this);\r\n        this.goToCurrentMonthView = this.goToCurrentMonthView.bind(this);\r\n\r\n        this.initialiseEvents();\r\n    }\r\n\r\n    previous() {\r\n        const currentMonthView = this.state.selectedMonth;\r\n\r\n        this.setState({\r\n            selectedMonth: currentMonthView.subtract(1, \"month\")\r\n        });\r\n    }\r\n\r\n    next() {\r\n        const currentMonthView = this.state.selectedMonth;\r\n        this.setState({\r\n            selectedMonth: currentMonthView.add(1, \"month\")\r\n        });\r\n    }\r\n\r\n    select(day) {\r\n        this.setState({\r\n            selectedMonth: day.date,\r\n            selectedDay: day.date.clone(),\r\n            showEvents: true\r\n        });\r\n    }\r\n\r\n    goToCurrentMonthView() {\r\n        this.setState({\r\n            selectedMonth: moment()\r\n        });\r\n    }\r\n\r\n    showCalendar() {\r\n        this.setState({\r\n            selectedMonth: this.state.selectedMonth,\r\n            selectedDay: this.state.selectedDay,\r\n            showEvents: false\r\n        });\r\n    }\r\n\r\n    renderMonthLabel() {\r\n        const currentMonthView = this.state.selectedMonth;\r\n        return (\r\n            <span className=\"box month-label\">\r\n                {currentMonthView.format(\"MMMM YYYY\")}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDayLabel() {\r\n        const currentSelectedDay = this.state.selectedDay;\r\n        return (\r\n            <span className=\"box month-label\">\r\n                {currentSelectedDay.format(\"DD MMMM YYYY\")}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderTodayLabel() {\r\n        return (\r\n            <span className=\"box today-label\" onClick={this.goToCurrentMonthView}>\r\n                Today\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderWeeks() {\r\n        const currentMonthView = this.state.selectedMonth;\r\n        const currentSelectedDay = this.state.selectedDay;\r\n        const monthEvents = this.state.selectedMonthEvents;\r\n\r\n        let weeks = [];\r\n        let done = false;\r\n        let previousCurrentNextView = currentMonthView\r\n            .clone()\r\n            .startOf(\"month\")\r\n            .subtract(1, \"d\")\r\n            .day(\"Monday\");\r\n        let count = 0;\r\n        let monthIndex = previousCurrentNextView.month();\r\n\r\n        while (!done) {\r\n            weeks.push(\r\n                <Week\r\n                    previousCurrentNextView={previousCurrentNextView.clone()}\r\n                    currentMonthView={currentMonthView}\r\n                    monthEvents={monthEvents}\r\n                    selected={currentSelectedDay}\r\n                    select={day => this.select(day)}\r\n                />\r\n            );\r\n            previousCurrentNextView.add(1, \"w\");\r\n            done = count++ > 2 && monthIndex !== previousCurrentNextView.month();\r\n            monthIndex = previousCurrentNextView.month();\r\n        }\r\n        return weeks;\r\n    }\r\n\r\n    initialiseEvents() {\r\n        const monthEvents = this.state.selectedMonthEvents;\r\n\r\n        let allEvents = [];\r\n\r\n        let event = {\r\n            name: \"Pavel Donchev\",\r\n            title: \"Vacantion\",\r\n            position: \"BeckEndDev\",\r\n            date: moment(),\r\n            imageUrl: \"https:\\/\\/www.eveliko.com\\/images\\/systemlibrariesprovider\\/sys-profile-images\\/pavel_avatar_5bb030f4-4ba9-48e3-945c-103560ba1ab5.jpg?sfvrsn=0\"\r\n        }\r\n\r\n        allEvents.push(event);\r\n\r\n        for (let i = 0; i < allEvents.length; i++) {\r\n            monthEvents.push(allEvents[i]);\r\n        }\r\n\r\n        this.setState({\r\n            selectedMonthEvents: monthEvents\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showEvents = this.state.showEvents;\r\n\r\n        if (showEvents) {\r\n            return (\r\n                <section className=\"main-calendar\">\r\n                    <header className=\"calendar-header\">\r\n                        <div className=\"row title-header\">\r\n                            {this.renderDayLabel()}\r\n                        </div>\r\n                        <div className=\"row button-container\">\r\n                            <div className=\"icon\" onClick={this.showCalendar}>\r\n                                chevron_left\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <Events\r\n                        selectedMonth={this.state.selectedMonth}\r\n                        selectedDay={this.state.selectedDay}\r\n                        selectedMonthEvents={this.state.selectedMonthEvents}\r\n                    />\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"main-calendar\">\r\n                    <header className=\"calendar-header\">\r\n                        <div className=\"row title-header\">\r\n                            <div className=\"icon\" onClick={this.previous}>\r\n                                chevron_left\r\n                            </div>\r\n                            <div className=\"box header-text\">\r\n                                {this.renderTodayLabel()}\r\n                                {this.renderMonthLabel()}\r\n                            </div>\r\n                            <div className=\"icon\" onClick={this.next}>\r\n                                chevron_right\r\n                            </div>\r\n                        </div>\r\n                        <DayNames />\r\n                    </header>\r\n                    <div className=\"days-container\">\r\n                        {this.renderWeeks()}\r\n                    </div>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Events extends React.Component {\r\n    render() {\r\n        const currentSelectedDay = this.props.selectedDay;\r\n        const monthEvents = this.props.selectedMonthEvents;\r\n\r\n        const monthEventsRendered = monthEvents.map((event, i) => {\r\n            return (\r\n                <div\r\n                    key={event.title}\r\n                    className=\"event-container\"\r\n                >\r\n                    <div className=\"card\">\r\n                        <img src={event.imageUrl} alt=\"image\" />\r\n                        <div className=\"person-name\">\r\n                            <p>{event.name}</p>\r\n                        </div>\r\n                        <div className=\"leave-reason\">\r\n                            <p>\r\n                                {event.title}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        const dayEventsRendered = [];\r\n\r\n        for (let i = 0; i < monthEventsRendered.length; i++) {\r\n            if (monthEvents[i].date.isSame(currentSelectedDay, \"day\")) {\r\n                dayEventsRendered.push(monthEventsRendered[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"day-events\">\r\n                {dayEventsRendered}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DayNames extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row days-header\">\r\n                <span className=\"box day-name\">Mon</span>\r\n                <span className=\"box day-name\">Tue</span>\r\n                <span className=\"box day-name\">Wed</span>\r\n                <span className=\"box day-name\">Thu</span>\r\n                <span className=\"box day-name\">Fri</span>\r\n                <span className=\"box day-name\">Sat</span>\r\n                <span className=\"box day-name\">Sun</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Week extends React.Component {\r\n    render() {\r\n        let days = [];\r\n        let date = this.props.previousCurrentNextView;\r\n        let currentMonthView = this.props.currentMonthView;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n        let monthEvents = this.props.monthEvents;\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            let dayHasEvents = false;\r\n\r\n            for (let j = 0; j < monthEvents.length; j++) {\r\n                if (monthEvents[j].date.isSame(date, \"day\")) {\r\n                    dayHasEvents = true;\r\n                }\r\n            }\r\n\r\n            let day = {\r\n                name: date.format(\"dd\").substring(0, 1),\r\n                number: date.date(),\r\n                isCurrentMonth: date.month() === currentMonthView.month(),\r\n                isToday: date.isSame(new Date(), \"day\"),\r\n                date: date,\r\n                hasEvents: dayHasEvents\r\n            };\r\n\r\n            days.push(<Day day={day} selected={selected} select={select} />);\r\n            date = date.clone();\r\n            date.add(1, \"d\");\r\n        }\r\n        return (\r\n            <div className=\"row week\">\r\n                {days}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Day extends React.Component {\r\n    render() {\r\n        let day = this.props.day;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n\r\n        return (\r\n            <div\r\n                className={\r\n                    \"day\" +\r\n                    (day.isToday ? \" today\" : \"\") +\r\n                    (day.isCurrentMonth ? \"\" : \" different-month\") +\r\n                    (day.date.isSame(selected) ? \" selected\" : \"\") +\r\n                    (day.hasEvents ? \" has-events\" : \"\")\r\n                }\r\n                onClick={() => select(day)}\r\n            >\r\n                <div className=\"day-number\">{day.number}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthCal;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nclass WeekCal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedWeek: moment(),\r\n            selectedDay: moment().startOf('day'),\r\n            selectedWeekEvents: [],\r\n            showEvents: false\r\n        };\r\n\r\n        this.previous = this.previous.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.showCalendar = this.showCalendar.bind(this);\r\n        this.goToCurrentWeekView = this.goToCurrentWeekView.bind(this);\r\n\r\n        this.initialiseEvents();\r\n    }\r\n\r\n    previous() {\r\n        const currentWeekView = this.state.selectedWeek;\r\n\r\n        this.setState({\r\n            selectedWeek: currentWeekView.subtract(1, \"week\")\r\n        });\r\n    }\r\n\r\n    next() {\r\n        const currentWeekView = this.state.selectedWeek;\r\n        this.setState({\r\n            selectedWeek: currentWeekView.add(1, \"week\")\r\n        });\r\n    }\r\n\r\n    select(day) {\r\n        this.setState({\r\n            selectedWeek: day.date,\r\n            selectedDay: day.date.clone(),\r\n            showEvents: true\r\n        });\r\n    }\r\n\r\n    goToCurrentWeekView() {\r\n        this.setState({\r\n            selectedWeek: moment()\r\n        });\r\n        console.log(this.state.selectedWeek)\r\n    }\r\n\r\n    showCalendar() {\r\n        this.setState({\r\n            selectedWeek: this.state.selectedWeek,\r\n            selectedDay: this.state.selectedDay,\r\n            showEvents: false\r\n        });\r\n    }\r\n\r\n    renderWeekLabel() {\r\n        const currentWeekView = this.state.selectedWeek;\r\n        return (\r\n            <span className=\"box month-label\">\r\n                {currentWeekView.format(\"MMMM YYYY\")}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDayLabel() {\r\n        const currentSelectedDay = this.state.selectedDay;\r\n        return (\r\n            <span className=\"box month-label\">\r\n                {currentSelectedDay.format(\"DD MMMM YYYY\")}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderTodayLabel() {\r\n        return (\r\n            <span className=\"box today-label\" onClick={this.goToCurrentWeekView}>\r\n                Today\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderWeeks() {\r\n        const currentWeekView = this.state.selectedWeek;\r\n\r\n        let weeks = [];\r\n        let previousCurrentNextView = currentWeekView\r\n            .clone()\r\n            .startOf(\"day\")\r\n            .subtract(1, \"d\")\r\n            .day(\"Monday\");\r\n\r\n        weeks.push(<Week\r\n            previousCurrentNextView={previousCurrentNextView.clone()}\r\n            currentWeekView={this.state.selectedWeek}\r\n            weekEvents={this.state.selectedWeekEvents}\r\n            selected={this.state.selectedDay}\r\n            select={day => this.select(day)}\r\n        />)\r\n\r\n        return weeks;\r\n    }\r\n\r\n    initialiseEvents() {\r\n        const weekEvents = this.state.selectedWeekEvents;\r\n\r\n        let allEvents = [];\r\n\r\n        let event = {\r\n            name: \"Pavel Donchev\",\r\n            title: \"Vacantion\",\r\n            position: \"BeckEndDev\",\r\n            date: moment(),\r\n            imageUrl: \"https:\\/\\/www.eveliko.com\\/images\\/systemlibrariesprovider\\/sys-profile-images\\/pavel_avatar_5bb030f4-4ba9-48e3-945c-103560ba1ab5.jpg?sfvrsn=0\"\r\n        };\r\n\r\n        allEvents.push(event);\r\n\r\n        for (let i = 0; i < allEvents.length; i++) {\r\n            weekEvents.push(allEvents[i]);\r\n        }\r\n\r\n        this.setState({\r\n            selectedWeekEvents: weekEvents\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showEvents = this.state.showEvents;\r\n\r\n        if (showEvents) {\r\n            return (\r\n                <section className=\"main-calendar\">\r\n                    <header className=\"calendar-header\">\r\n                        <div className=\"row title-header\">\r\n                            {this.renderDayLabel()}\r\n                        </div>\r\n                        <div className=\"row button-container\">\r\n                            <div className=\"icon\" onClick={this.showCalendar}>\r\n                                chevron_left\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <Events\r\n                        selectedWeek={this.state.selectedWeek}\r\n                        selectedDay={this.state.selectedDay}\r\n                        selectedWeekEvents={this.state.selectedWeekEvents}\r\n                    />\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"main-calendar\">\r\n                    <header className=\"calendar-header\">\r\n                        <div className=\"row title-header\">\r\n                            <div className=\"icon\" onClick={this.previous}>\r\n                                chevron_left\r\n                            </div>\r\n                            <div className=\"box header-text\">\r\n                                {this.renderTodayLabel()}\r\n                                {this.renderWeekLabel()}\r\n                            </div>\r\n                            <div className=\"icon\" onClick={this.next}>\r\n                                chevron_right\r\n                            </div>\r\n                        </div>\r\n                        <DayNames />\r\n                    </header>\r\n                    <div className=\"days-container\">\r\n                        {this.renderWeeks()}\r\n                    </div>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Events extends React.Component {\r\n    render() {\r\n        const currentSelectedDay = this.props.selectedDay;\r\n        const weekEvents = this.props.selectedWeekEvents;\r\n\r\n        const weekEventsRendered = weekEvents.map((event, i) => {\r\n            return (\r\n                <div\r\n                    key={event.title}\r\n                    className=\"event-container\"\r\n                >\r\n                    <div className=\"card\">\r\n                        <img src={event.imageUrl} alt=\"image\" />\r\n                        <div className=\"person-name\">\r\n                            <p>{event.name}</p>\r\n                        </div>\r\n                        <div className=\"leave-reason\">\r\n                            <p>\r\n                                {event.title}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        const dayEventsRendered = [];\r\n\r\n        for (let i = 0; i < weekEventsRendered.length; i++) {\r\n            if (weekEvents[i].date.isSame(currentSelectedDay, \"day\")) {\r\n                dayEventsRendered.push(weekEventsRendered[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"day-events\">\r\n                {dayEventsRendered}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DayNames extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row days-header\">\r\n                <span className=\"box day-name\">Mon</span>\r\n                <span className=\"box day-name\">Tue</span>\r\n                <span className=\"box day-name\">Wed</span>\r\n                <span className=\"box day-name\">Thu</span>\r\n                <span className=\"box day-name\">Fri</span>\r\n                <span className=\"box day-name\">Sat</span>\r\n                <span className=\"box day-name\">Sun</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Week extends React.Component {\r\n    render() {\r\n        let days = [];\r\n        let date = this.props.previousCurrentNextView;\r\n        let currentWeekView = this.props.currentWeekView;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n        let weekEvents = this.props.weekEvents;\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            let dayHasEvents = false;\r\n\r\n            for (let j = 0; j < weekEvents.length; j++) {\r\n                if (weekEvents[j].date.isSame(date, \"day\")) {\r\n                    dayHasEvents = true;\r\n                }\r\n            }\r\n\r\n            let day = {\r\n                name: date.format(\"dd\").substring(0, 1),\r\n                number: date.date(),\r\n                isCurrentWeek: date.month() === currentWeekView.month(),\r\n                isToday: date.isSame(new Date(), \"day\"),\r\n                date: date,\r\n                hasEvents: dayHasEvents\r\n            };\r\n\r\n            days.push(<Day day={day} selected={selected} select={select} />);\r\n            date = date.clone();\r\n            date.add(1, \"d\");\r\n        }\r\n        return (\r\n            <div className=\"row week\">\r\n                {days}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Day extends React.Component {\r\n    render() {\r\n        let day = this.props.day;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n\r\n        return (\r\n            <div\r\n                className={\r\n                    \"day\" +\r\n                    (day.isToday ? \" today\" : \"\") +\r\n                    (day.isCurrentWeek ? \"\" : \" different-month\") +\r\n                    (day.date.isSame(selected) ? \" selected\" : \"\") +\r\n                    (day.hasEvents ? \" has-events\" : \"\")\r\n                }\r\n                onClick={() => select(day)}\r\n            >\r\n                <div className=\"day-number\">{day.number}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekCal;\r\n","import React from \"react\";\n\nimport \"./App.scss\";\n\nimport MonthCal from './components/Month'\nimport WeekCal from \"./components/Week\";\n\nclass App extends React.Component {\n\n  state = {\n    currentView: 1,\n    nextView: 2\n  }\n\n  setCurrentView(viewNumber) {\n    this.setState({ currentView: viewNumber, nextView: viewNumber });\n  }\n\n\n  render() {\n    return (\n      <div className=\"calendar-content\">\n            <button\n              className=\"button-month\"\n              onClick={() => this.setCurrentView(1)}\n            >Month</button>\n            <button\n              className=\"button-week\"\n              onClick={() => this.setCurrentView(2)}\n            >Week</button>\n\n            {\n              this.state.currentView === 1\n                ? <MonthCal />\n                : <WeekCal />\n            } \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"calendar-wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}